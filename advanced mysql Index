Index in mysql
  --> Index in mysql in nothing but finding exact data from the database in efficient manner
  
  we can also find the details but it will search all the row in the database and fetch the result , yeah its common but why we need idex. 
  If you have thousands rows in the database you are passing query like using where condition or something . it is going to check all the rows and column that is taking so much of time
  for those case We nee INDEX in mysql
  
  1.Creating a Index -- > create index "index name" on "table name" (column name)
  
  2.Drop a index --> DROP INDEX index_name ON table_name [algorithm_option | lock_option];
    The algorithm_option allows you to specify a specific algorithm used for the index removal. The following shows the syntax of the algorithm_option clause:

    ALGORITHM [=] {DEFAULT|INPLACE|COPY}
    
      Code language: SQL (Structured Query Language) (sql)
      For the index removal, the following algorithms are supported:

      COPY: The table is copied to the new table row by row, the DROP INDEX is then performed on the copy of the original table. The concurrent data manipulation statements such as INSERT and UPDATE are not permitted.
      INPLACE: The table is rebuilt in place instead of copied to the new one. MySQL issues an exclusive metadata lock on the table during the preparation and execution phases of the index removal operation. This algorithm allows for concurrent data manipulation statements.
      Note that the ALGORITHM clause is optional. If you skip it, MySQL uses INPLACE. In case the INPLACE is not supported, MySQL uses COPY.

      Using DEFAULT has the same effect as omitting the ALGORITHM clause.

    Lock
    
      The lock_option controls the level of concurrent reads and writes on the table while the index is being removed.

      The following shows the syntax of the lock_option:

      LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}
      Code language: SQL (Structured Query Language) (sql)
      The following locking modes are supported:

       DEFAULT: this allows you to have the maximum level of concurrency for a given algorithm. First, it allows concurrent reads and writes if supported. If not, allow concurrent reads if supported. If not, enforce exclusive access.
       NONE: if the NONE is supported, you can have concurrent reads and writes. Otherwise, MySQL issues an error.
       SHARED: if the SHARED is supported, you can have concurrent reads, but not writes. MySQL issues an error if the concurrent reads are not supported.
       EXCLUSIVE: this enforces exclusive access.
       
       
       
       
       MySQL DROP INDEX statement examples
          Letâ€™s create a new table for the demonstration:

          CREATE TABLE leads(
              lead_id INT AUTO_INCREMENT,
              first_name VARCHAR(100) NOT NULL,
              last_name VARCHAR(100) NOT NULL,
              email VARCHAR(255) NOT NULL,
              information_source VARCHAR(255),
              INDEX name(first_name,last_name),
              UNIQUE email(email),
              PRIMARY KEY(lead_id)
          );
          Code language: SQL (Structured Query Language) (sql)
          The following statement removes the name index from the leads table:

          DROP INDEX name ON leads;
          Code language: SQL (Structured Query Language) (sql)
          The following statement drops the email index from the leads table with a specific algorithm and lock:

          DROP INDEX email ON leads
          ALGORITHM = INPLACE 
          LOCK = DEFAULT;
          Code language: SQL (Structured Query Language) (sql)
          MySQL DROP PRIMARY KEY index
          To drop the primary key whose index name is PRIMARY, you use the following statement:

          DROP INDEX `PRIMARY` ON table_name;
          Code language: SQL (Structured Query Language) (sql)
          The following statement creates a new table named twith a primary key:

          CREATE TABLE t(
              pk INT PRIMARY KEY,
              c VARCHAR(10)
          );
          Code language: SQL (Structured Query Language) (sql)
          To drop the primary key index, you use the following statement:

          DROP INDEX `PRIMARY` ON t;
          Code language: SQL (Structured Query Language) (sql)
